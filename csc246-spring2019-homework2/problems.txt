/* mchoi John M Choi */
1.
	i)
	  FIFO
	  
		a) |---- P1 ----|---- P2 ----|---- P3 ----|---- P4 ----|---- P5 ----|---- P6 ----|
		   0            12           20           26           30           32           33
		b) 
		  Average Response Time: (0 + 11 + 17 + 20 + 20 + 17) / 6 = 14.167
		  Average Turnaround Time: (12 + 19 + 23 + 24 + 22 + 18) / 6 = 19.667
		  Average Waiting Time: (0 + 11 + 17 + 20 + 20 + 17) / 6 = 14.167
	ii)
	  Round Robin with Time Quantum = 4
	  
	  a) |--P1--|--P2--|--P3--|--P1--|--P4--|--P2--|--P5--|--P3--|--P6--|--P1--|
	     0      4      8      12     16     20     24    26      28     29     33
	  b)
	    Average Response Time: (0 + 3 + 5 + 10 + 14 + 13) / 6 = 7.5
	    Average Turnaround Time: (33 + 23 + 25 + 14 + 16 + 14) / 6 = 20.833
	    Average Waiting Time: ((8 + 13) + (3 + 12) + (5 + 14) + 10 + 14 + 13) / 6 = 15.333
	iii)
	  MLFQ
	  
	  
2.
	1) 
	==21345== Helgrind, a thread error detector
  ==21345== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
  ==21345== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
  ==21345== Command: ./race
  ==21345==
  ==21345== ---Thread-Announcement------------------------------------------
  ==21345==
  ==21345== Thread #1 is the program's root thread
  ==21345==
  ==21345== ---Thread-Announcement------------------------------------------
  ==21345==
  ==21345== Thread #2 was created
  ==21345==    at 0x518287E: clone (clone.S:71)
  ==21345==    by 0x4E49EC4: create_thread (createthread.c:100)
  ==21345==    by 0x4E49EC4: pthread_create@@GLIBC_2.2.5 (pthread_create.c:797)
  ==21345==    by 0x4C36A27: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
  ==21345==    by 0x10878B: main (race.c:12)
  ==21345==
  ==21345== ----------------------------------------------------------------
  ==21345==
  ==21345== Possible data race during read of size 4 at 0x309014 by thread #1
  ==21345== Locks held: none
  ==21345==    at 0x10878C: main (race.c:13)
  ==21345==
  ==21345== This conflicts with a previous write of size 4 by thread #2
  ==21345== Locks held: none
  ==21345==    at 0x10874B: child_fn (race.c:6)
  ==21345==    by 0x4C36C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
  ==21345==    by 0x4E496DA: start_thread (pthread_create.c:463)
  ==21345==    by 0x518288E: clone (clone.S:95)
  ==21345==  Address 0x309014 is 0 bytes inside data symbol "var"
  ==21345==
  ==21345== ----------------------------------------------------------------
  ==21345==
  ==21345== Possible data race during write of size 4 at 0x309014 by thread #1
  ==21345== Locks held: none
  ==21345==    at 0x108795: main (race.c:13)
  ==21345==
  ==21345== This conflicts with a previous write of size 4 by thread #2
  ==21345== Locks held: none
  ==21345==    at 0x10874B: child_fn (race.c:6)
  ==21345==    by 0x4C36C26: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
  ==21345==    by 0x4E496DA: start_thread (pthread_create.c:463)
  ==21345==    by 0x518288E: clone (clone.S:95)
  ==21345==  Address 0x309014 is 0 bytes inside data symbol "var"
  ==21345==
  ==21345==
  ==21345== For counts of detected and suppressed errors, rerun with: -v
  ==21345== Use --history-level=approx or =none to gain increased speed, at
  ==21345== the cost of reduced accuracy of conflicting-access information
  ==21345== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)


	2) The Helgrind output of race.c program looked almost identical to the example output listed on the manual page. It shows the line of code that might cause the race condition and it shows the variable "var" that will be affected by this condition. The actual output is listed two times because there will be two threads.
